#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ([2.68])
AC_INIT([qualityManager], [0.1], [la.marentes455@uniandes.edu.co])
AM_INIT_AUTOMAKE
LT_INIT
AC_CONFIG_SRCDIR([src/main.cpp])

## ------------------------Begin instantiation part 
## Meaning:
## An instantiating macro is one which defines one or more tags, 
## usually referring to files that are to be translated by the generated 
## configure scripts, from a template containing Autoconf substitution 
## variables.

AC_CONFIG_HEADERS([config.h])

AC_CONFIG_MACRO_DIR([m4])
AM_MAINTAINER_MODE

# Checks for build environment
AC_PROG_CXX
AC_PROG_CC
AC_PROG_CPP
AC_PROG_AWK
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_LIBTOOL_DLOPEN
AC_PROG_LIBTOOL
AC_SET_MAKE

AC_LANG_CPLUSPLUS


dnl # Platform 
case "$target" in
*-linux*)
        OS=LINUX
        AC_DEFINE(LINUX, 1, "Linux OS")
        ;;
*-sunos*)
        OS=SUNOS
        AC_DEFINE(SUNOS, 1, "SUNOS")
        ;;
*-irix*)
        OS=IRIX
        AC_DEFINE(IRIX, 1, "IRIX OS")
        ;;
*-solaris*)
        OS=SOLARIS
        AC_DEFINE(SOLARIS, 1, "Solaris OS")
        ;;
*-freebsd*)
        OS=FREEBSD
        AC_DEFINE(FREEBSD, 1, "FreeBSD OS")
        ;;
*dec-os*)
        OS=ALPHA
        AC_DEFINE(ALPHA, 1, "Alpha")
        ;;
*)
        OS=UNIX
        AC_DEFINE(UNIX, 1, "Unix")
        ;;
esac

dnl # Hardware

case "$target" in
*i*86*)
        PROC=LINUX
        AC_DEFINE(INTEL, 1, "Intel")
        ;;
esac


# Checks for libraries.


AC_ARG_ENABLE(threads,
  [  --enable-threads            enable threads ],
  [case "${enableval}" in
    yes) threads=true ;;
    no)  threads=false ;;
    *) AC_MSG_ERROR(bad value ${enableval} for --enable-threads) ;;
  esac],[threads=false])
AM_CONDITIONAL(ENABLE_THREADS, test x$threads = xtrue)
if test $threads = true ; then
  AC_DEFINE(ENABLE_THREADS, 1, [enable multi threading])
fi

dnl # check size

AC_CHECK_SIZEOF(off_t)

# Checks for header files.


# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL

# Checks for library functions.

PKG_CHECK_MODULES(NL3, libnl-3.0 >= 3.0, [
	AC_SUBST(NL3_CFLAGS)
	AC_SUBST(NL3_LIBS)
	AC_DEFINE(HAVE_LIBNL, [1], ["libnl is available"])
		has_libnl="yes"
], [
	AC_MSG_WARN([libnl not found])
])


PKG_CHECK_MODULES(NL_ROUTE_3, libnl-route-3.0 >= 3.0, [
	AC_SUBST(NL_ROUTE_3_CFLAGS)
	AC_SUBST(NL_ROUTE_3_LIBS)
	AC_DEFINE(HAVE_LIBNL_ROUTE, [1], ["libnl-route is available"])
		has_libnl_route="yes"
], [
	AC_MSG_WARN([libnl_route not found])
])

AC_ARG_ENABLE(debug,
  [  --enable-debug            enable debug build ],
  [case "${enableval}" in
    yes) debug=true ;;
    no)  debug=false ;;
    *) AC_MSG_ERROR(bad value ${enableval} for --enable-debug) ;;
  esac],[debug=false])
AM_CONDITIONAL(ENABLE_DEBUG, test x$debug = xtrue)
if test $debug = true ; then
  AC_DEFINE(ENABLE_DEBUG, 1, [enable debug build])
fi


if test $threads = true ; then
  AC_CHECK_HEADERS([pthread.h])
  if test $OS = FREEBSD ; then
    OCCFLAGS=$CXXFLAGS
    OCFLAGS=$CFLAGS
    CXXFLAGS="$CXXFLAGS -D_THREAD_SAFE -I/usr/local/include/pthread/linuxthreads"
    CFLAGS="$CFLAGS -D_THREAD_SAFE -I/usr/local/include/pthread/linuxthreads"
    have_linux_threads="yes"
    AC_CHECK_LIB(lthread, pthread_create,
    [PTHREADLIB="-llthread -llgcc_r"],[ have_linux_threads="no" ] )
    #if no linuxthreads try libc_r 
    CXXFLAGS="$OCXXFLAGS -pthread"
    CFLAGS="$OCFLAGS -pthread"
    AC_CHECK_LIB(c_r, pthread_create, [PTHREADLIB="-lc_r"])
    # actually newer FREEBSD version should have pthread... 
  else
    AC_CHECK_LIB(pthread, pthread_create,
      [PTHREADLIB="-lpthread"])
  fi
fi



# check for Poco Foundation library
# Checks for libraries.
AC_LANG(C++)
SAVED_LDFLAGS=$LDFLAGS
SAVED_CPPFLAGS=$CPPFLAGS
SAVED_LIBS=$LIBS
CPPFLAGS="$CPPFLAGS -I/usr/local/include/Poco"
LDFLAGS="$LDFLAGS -L/usr/local/lib/"
LIBS="$LIBS -lPocoFoundation -lPocoUtil -lPocoNet"
AC_LINK_IFELSE(
    [AC_LANG_PROGRAM([#include <DateTime.h>],
    [Poco::DateTime now])],
    [poco_LIBS="-lPocoFoundation -lPocoUtil -lPocoNet"] 
    [poco_CFLAGS="-DHAVE_PCAP -I/usr/local/include/Poco"] 
    [poco_LDFLAGS]="-L/usr/local/lib/"]
    [HAVE_POCO=1],
    [AC_MSG_WARN([libPoco is not installed.])])
CPPFLAGS=$SAVED_CPPFLAGS 
LDFLAGS=$SAVED_LDFLAGS
LIBS= $SAVED_LIBS


dnl # checks for programs

AC_CHECK_PROG(DOXY,doxygen,doxygen,[])
if test "$DOXY" = "" ; then
  AC_MSG_WARN([doxygen not installed, can not build documentation])
fi

dnl # set version and data

dnl # Output substitution

AC_DEFINE_UNQUOTED(BUILD_TIME, "`date +"%d/%m/%Y %H:%M:%S"`", "release date")

dnl # set default directories

if test "${prefix}" = "NONE" ; then
  prefix=${ac_default_prefix}
fi

sysconfdir="${sysconfdir}/$PACKAGE"
DEF_SYSCONFDIR=`eval echo ${sysconfdir}`
AC_DEFINE_UNQUOTED(DEF_SYSCONFDIR, "$DEF_SYSCONFDIR", "sysconfig dir")

DEF_STATEDIR=`eval echo ${localstatedir}`
AC_DEFINE_UNQUOTED(DEF_STATEDIR, "$DEF_STATEDIR", "state dir")

libdir="${libdir}/$PACKAGE"
if test "${exec_prefix}" = "NONE" ; then
  exec_prefix=${prefix}
fi
DEF_LIBDIR=`eval echo ${libdir}`
AC_DEFINE_UNQUOTED(DEF_LIBDIR, "$DEF_LIBDIR", "lib dir")

DEF_BINDIR=`eval echo ${bindir}`
AC_DEFINE_UNQUOTED(DEF_BINDIR, "$DEF_BINDIR", "bin dir")


AC_SUBST(poco_CFLAGS)
AC_SUBST(poco_LIBS)
AC_SUBST(poco_LDFLAGS)



AC_CONFIG_FILES([Makefile
                 src/Makefile])

AC_OUTPUT
